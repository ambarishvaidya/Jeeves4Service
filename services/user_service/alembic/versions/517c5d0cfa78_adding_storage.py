"""Adding storage.

Revision ID: 517c5d0cfa78
Revises: 74a51fc18cef
Create Date: 2025-07-28 22:56:15.833724

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '517c5d0cfa78'
down_revision: Union[str, Sequence[str], None] = '74a51fc18cef'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_property_address'), table_name='property')
    op.drop_index(op.f('ix_property_id'), table_name='property')
    op.drop_index(op.f('ix_property_name'), table_name='property')
    op.drop_table('property')
    op.drop_table('alembic_version_property_service')
    op.drop_index(op.f('ix_property_rooms_id'), table_name='property_rooms')
    op.drop_index(op.f('ix_property_rooms_room_name'), table_name='property_rooms')
    op.drop_table('property_rooms')
    op.drop_index(op.f('ix_property_associations_id'), table_name='property_associations')
    op.drop_table('property_associations')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('property_associations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('property_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], name=op.f('property_associations_property_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('property_associations_pkey'))
    )
    op.create_index(op.f('ix_property_associations_id'), 'property_associations', ['id'], unique=False)
    op.create_table('property_rooms',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('property_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('room_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], name=op.f('property_rooms_property_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('property_rooms_pkey'))
    )
    op.create_index(op.f('ix_property_rooms_room_name'), 'property_rooms', ['room_name'], unique=False)
    op.create_index(op.f('ix_property_rooms_id'), 'property_rooms', ['id'], unique=False)
    op.create_table('alembic_version_property_service',
    sa.Column('version_num', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('version_num', name=op.f('alembic_version_property_service_pkc'))
    )
    op.create_table('property',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('property_pkey'))
    )
    op.create_index(op.f('ix_property_name'), 'property', ['name'], unique=False)
    op.create_index(op.f('ix_property_id'), 'property', ['id'], unique=False)
    op.create_index(op.f('ix_property_address'), 'property', ['address'], unique=False)
    # ### end Alembic commands ###

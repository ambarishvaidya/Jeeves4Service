"""Adding schemas and renaming tables.

Revision ID: 9bb4c9329d9d
Revises: daac337c4772
Create Date: 2025-07-28 23:03:56.921058

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9bb4c9329d9d'
down_revision: Union[str, Sequence[str], None] = 'daac337c4772'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='property'
    )
    op.create_index(op.f('ix_property_details_address'), 'details', ['address'], unique=False, schema='property')
    op.create_index(op.f('ix_property_details_id'), 'details', ['id'], unique=False, schema='property')
    op.create_index(op.f('ix_property_details_name'), 'details', ['name'], unique=False, schema='property')
    op.create_table('associations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['property.details.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='property'
    )
    op.create_index(op.f('ix_property_associations_id'), 'associations', ['id'], unique=False, schema='property')
    op.create_table('rooms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('property_id', sa.Integer(), nullable=False),
    sa.Column('room_name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['property.details.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='property'
    )
    op.create_index(op.f('ix_property_rooms_id'), 'rooms', ['id'], unique=False, schema='property')
    op.create_index(op.f('ix_property_rooms_room_name'), 'rooms', ['room_name'], unique=False, schema='property')
    op.drop_index(op.f('ix_property_associations_id'), table_name='property_associations')
    op.drop_table('property_associations')    
    op.drop_index(op.f('ix_property_rooms_id'), table_name='property_rooms')
    op.drop_index(op.f('ix_property_rooms_room_name'), table_name='property_rooms')
    op.drop_table('property_rooms')
    op.drop_index(op.f('ix_property_address'), table_name='property')
    op.drop_index(op.f('ix_property_id'), table_name='property')
    op.drop_index(op.f('ix_property_name'), table_name='property')
    op.drop_table('property')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('property_rooms',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('property_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('room_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], name=op.f('property_rooms_property_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('property_rooms_pkey'))
    )
    op.create_index(op.f('ix_property_rooms_room_name'), 'property_rooms', ['room_name'], unique=False)
    op.create_index(op.f('ix_property_rooms_id'), 'property_rooms', ['id'], unique=False)
    op.create_table('property',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('property_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='property_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_property_name'), 'property', ['name'], unique=False)
    op.create_index(op.f('ix_property_id'), 'property', ['id'], unique=False)
    op.create_index(op.f('ix_property_address'), 'property', ['address'], unique=False)
    op.create_table('property_associations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('property_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], name=op.f('property_associations_property_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('property_associations_pkey'))
    )
    op.create_index(op.f('ix_property_associations_id'), 'property_associations', ['id'], unique=False)
    op.drop_index(op.f('ix_property_rooms_room_name'), table_name='rooms', schema='property')
    op.drop_index(op.f('ix_property_rooms_id'), table_name='rooms', schema='property')
    op.drop_table('rooms', schema='property')
    op.drop_index(op.f('ix_property_associations_id'), table_name='associations', schema='property')
    op.drop_table('associations', schema='property')
    op.drop_index(op.f('ix_property_details_name'), table_name='details', schema='property')
    op.drop_index(op.f('ix_property_details_id'), table_name='details', schema='property')
    op.drop_index(op.f('ix_property_details_address'), table_name='details', schema='property')
    op.drop_table('details', schema='property')
    # ### end Alembic commands ###
